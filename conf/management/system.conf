akka {
  actor {
    warn-about-java-serializer-usage = off#关闭Java序列化来序列化消息时的警告，建议不要开启。如果开启，开启值=on
    default-mailbox {
      #akka默认邮箱的选择，默认配置是akka.dispatch.SingleConsumerOnlyUnboundedMailbox，这是一个多生产者单消费者队列。建议不要修改此参数
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
    }

    default-dispatcher {
      #akka dispatcher 配置，采用akka的默认的fork-join-executor，建议不要修改。
      parallelism-min = 2 #最小的线程数
      parallelism-factor = 4.0 #并行因子配置
      parallelism-max = 20 #最大的线程数
      throughput = 10
    }
  }

  remote {
    #artery模式下的配置
    artery {
       ssl {
              #节点的ssl配置,主要设置密码，密钥、证书、信任证书路径在程序中动态设置
              config-ssl-engine {
                  key-password = "123"
                  key-store-password = "123"
                  trust-store-password = "changeme"
              }
       }
    }
  }
}

akka.http {
  #akka 与http服务相关的配置
  idle-timeout = 100s#一个空闲连接超时时间配置，当空闲连接超时之后，将被自动关闭
  server {
    server-header = akka-http/${akka.http.version}#http服务头，建议不要修改
    idle-timeout = 100s#空闲连接超时时间，超时将自动关闭连接
    request-timeout = 100s #请求对超时时间
    max-connections = 1024#最大对连接数
  }
  client {
    idle-timeout = 100s #空闲连接超时时间，超时将自动关闭
    connecting-timeout = 100s#建立连接对超时时间
  }
  tls-session-info-header = off
  ssl-session-attribute = off
}

system {
  chain_network_id = "management" #组网id，组网id的命名不能包含"_"这样的字符
  genesis_node_name = "215159697776981712.node1"
  chain_cert_name = "identity-net:257091603041653856.super_admin"
  basic_chain_id = "identity-net"
  is_persistence_tx_to_db = 0 #0,不持久化缓存交易到数据库;1,持久化缓存交易到数据库
  #api是否开启
  api{
    http_mode = 0 #http协议模式 0,http;1,https 默认使用http
    is_need_client_auth = 0 #当http的模式设置为https时有效，该配置指https时是否需要客户端验证;0=不验证；1=验证
    http_service_port = 7081#http服务的端口号，默认为7081
  }
  account {
    chain_code_name = "RdidOperateAuthorizeTPL"#账户管理合约的名称，使用did配置：RdidOperateAuthorizeTPL；使用非did配置：ContractCert
    chain_code_version = 1
    cache_size = 10000 //账户权限信息缓存大小,默认10000
  }
  vote {
    #最低投票人数量
    vote_node_min = 4
    #参与共识的节点别名
    vote_node_list_jks = ["121000005l35120456.node1", "12110107bi45jh675g.node2",
      "122000002n00123567.node3", "921000005k36123789.node4"
      #]
      , "921000006e0012v696.node5"]
    vote_node_list = ["215159697776981712.node1","904703631549900672.node2","989038588418990208.node3",
      "645377164372772928.node4","379552050023903168.node5"]
  }
  output_alert{
    is_output_alert = false
    core_threads = 2
    max_threads = 4
    alive_time = 10 //unit second
    prisma_url = "http://localhost/"
  }

  block {
    #块内交易的最大数量
    trans_num_limit = 200
    #块内交易标准最小数量
    trans_num_min = 1
    #交易数量不足，重试次数
    retry_time = 10
    #区块的最大长度，不能大于传输的消息的最大长度，单位是字节
    block_length = 2400000
  }

  transaction {
    #辅助自动创建交易的间隔
    tran_create_dur = 100 #millis
    #最大交易缓存量
    max_cache_num = 100000
  }

  member_management{
    contract_name = "ManageNodeCert"
    contract_method = "updateNodeCert"
    contract_vote_method = "updateVoteList"
  }

  storage {
    db_type = "LevelDB" #支持数据库的类型：LevelDB、RocksDB
    db_path = "./repchaindata/data/leveldbdata"
    db_name = "215159697776981712.node1"
    db_cache_size=48 #数据库读写缓存，单位为M

    block_file_type = "localFileSystem"
    block_file_path = "./repchaindata/data/blockdata"
    block_file_name = "215159697776981712.node1"
    file_max_length = 100 #单位为M
  }

  gm{
    #是否使用国密算法，默认为false，使用java国际标准密码体系；true使用中国国家密码算法
    is_use_gm = false
    #jce密码算法提供者的类名
    gm_jce_provider = "org.bouncycastle.jce.provider.BouncyCastleProvider"
    #密码算法提供者注册时的注册名称
    gm_jce_provider_name = "BC"
    gm_jsse_provider = "org.bouncycastle.jsse.provider.BouncyCastleJsseProvider"
    gm_jsse_provider_name = "BCJSSE"
    gm_pfx_sign_key_name = "Sig"
  }


}
