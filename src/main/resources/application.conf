akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Options: ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  http.server.parsing{
    tls-session-info-header = on
  }

  cluster {
    akka.cluster.log-info = on
    log-info-verbose = on
    #jmx.enabled = on
    jmx.multi-mbeans-in-same-jvm = on
    #min-nr-of-members = 4
  }
  actor {
    serialize-messages = off
    serialize-creators = off
    enable-additional-serialization-bindings = on
    allow-java-serialization = off
    provider = "akka.cluster.ClusterActorRefProvider"
    #provider = "cluster"
    serializers {
      kryo = "com.twitter.chill.akka.AkkaSerializer"
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "java.lang.String" = java
      "java.io.Serializable" = kryo
      "com.google.protobuf.Message" = proto
      "scalapb.GeneratedMessage" = proto
    }

  }


  remote {
    artery {

      # Disable artery with this flag
      enabled = on

      # Select the underlying transport implementation.
      # Possible values: aeron-udp, tcp, tls-tcp
      transport = tls-tcp
      #log-received-messages = on
      #log-sent-messages = on
      advanced {

        # Maximum serialized message size, including header data.
        maximum-frame-size = 5120 KiB

        # Direct byte buffers are reused in a pool with this maximum size.
        # Each buffer has the size of 'maximum-frame-size'.
        # This is not a hard upper limit on number of created buffers. Additional
        # buffers will be created if needed, e.g. when using many outbound
        # associations at the same time. Such additional buffers will be garbage
        # collected, which is not as efficient as reusing buffers in the pool.
        buffer-pool-size = 256

        # Maximum serialized message size for the large messages, including header data.
        # It is currently restricted to 1/8th the size of a term buffer that can be
        # configured by setting the 'aeron.term.buffer.length' system property.
        # See 'large-message-destinations'.
        maximum-large-frame-size = 5 MiB

        # Direct byte buffers for the large messages are reused in a pool with this maximum size.
        # Each buffer has the size of 'maximum-large-frame-size'.
        # See 'large-message-destinations'.
        # This is not a hard upper limit on number of created buffers. Additional
        # buffers will be created if needed, e.g. when using many outbound
        # associations at the same time. Such additional buffers will be garbage
        # collected, which is not as efficient as reusing buffers in the pool.
        large-buffer-pool-size = 64

        outbound-message-queue-size = 30720

        #inbound-lanes = 1

        #outbound-lanes = 1
      }

      # SSL configuration that is used when transport=tls-tcp.
      ssl {
        #ssl-engine-provider = akka.remote.artery.tcp.ConfigSSLEngineProvider
        //ssl-engine-provider = akka.remote.artery.tcp.ConfigSSLEngineProvider
        #ssl-engine-provider = rep.crypto.nodedynamicmanagement.CustomSSLEngine
        #ssl-engine-provider = rep.crypto.GMSSLEngineProvider
        # Config of akka.remote.artery.tcp.ConfigSSLEngineProvider
        #以下配置给管理服务启动https时使用，节点的ssl配置在system.conf文件中配置
        config-ssl-engine {
            require-mutual-authentication = on
            # Set this to `on` to verify hostnames with sun.security.util.HostnameChecker
            hostname-verification = off
        }
      }
    }
  }

  //创世块
  genesisblock {
    creationBlockTime = 1495451252086
  }

}
